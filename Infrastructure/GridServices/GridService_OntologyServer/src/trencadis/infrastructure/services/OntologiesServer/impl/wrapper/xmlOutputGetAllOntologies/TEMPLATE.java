package trencadis.infrastructure.services.OntologiesServer.impl.wrapper.xmlOutputGetAllOntologies;/*******************************************************************  *********** CLASE GENERADA AUTOM�TICAMENTE POR XMLWRAPPER **********  ********-----Germ�n Molt� Mart�nez (gmolto@dsic.upv.es) -----*******  ********************************************************************/import org.w3c.dom.*;/** * Contiene los m�todos que permiten obtener y cambiar la informaci�n de los * elementos <STRONG>TEMPLATE </STRONG> del documento XML. */public class TEMPLATE extends Wrapper {	/**	 * Crea un Wrapper que trabajar� a partir de un elemento TEMPLATE	 * 	 * @param e	 *            El elemento sobre el cual trabaja el Wrapper	 */	public TEMPLATE(Element e) {		super(e);	}	/**	 * Obtiene el valor del atributo IDOntology	 * 	 * @return El valor del atributo IDOntology	 */	public String getAttr_IDOntology() {		try {			String unparsedValue = elem.getAttribute("IDOntology");			String parsedValue = unparsedValue;			return parsedValue;		} catch (Exception e) {			e.printStackTrace();			return null;		}	}	/**	 * Establece un valor para el atributo IDOntology Si el atributo no existe,	 * lo crea	 * 	 * @param value	 *            El valor a introducir en el atributo	 */	public void setAttr_IDOntology(String value) {		try {			String unparsedValue = value;			elem.setAttribute("IDOntology", unparsedValue);		} catch (Exception e) {			e.printStackTrace();		}	}	/**	 * Obtiene el valor del atributo Descripcion	 * 	 * @return El valor del atributo Descripcion	 */	public String getAttr_Descripcion() {		try {			String unparsedValue = elem.getAttribute("Descripcion");			String parsedValue = unparsedValue;			return parsedValue;		} catch (Exception e) {			e.printStackTrace();			return null;		}	}	/**	 * Establece un valor para el atributo Descripcion Si el atributo no existe,	 * lo crea	 * 	 * @param value	 *            El valor a introducir en el atributo	 */	public void setAttr_Descripcion(String value) {		try {			String unparsedValue = value;			elem.setAttribute("Descripcion", unparsedValue);		} catch (Exception e) {			e.printStackTrace();		}	}	/**	 * Obtiene el valor del elemento xmlDICOM_SR	 * 	 * @return El valor del elemento xmlDICOM_SR	 */	public String get_xmlDICOM_SR() {		try {			String unparsedValue = getValueByTagName("xmlDICOM_SR");			String parsedValue = unparsedValue;			return parsedValue;		} catch (Exception e) {			e.printStackTrace();			return null;		}	}	/**	 * Asocia un valor al elemento xmlDICOM_SR Si el elemento no existe, lo crea	 * previamente	 * 	 * @param value	 *            El valor a establecer al elemento xmlDICOM_SR	 * @throws IllegalArgumentException	 *             Si el valor incumple alguna de las restricciones del schema	 */	public void set_xmlDICOM_SR(String value) {		String unparsedValue = value;		try {			setValueByTagName("xmlDICOM_SR", unparsedValue);		} catch (Exception e) { // Si no existe el elemento lo creamos			Element el = doc.createElement("xmlDICOM_SR");			el.appendChild(doc.createTextNode(unparsedValue));			elem.appendChild(el);		}	}}