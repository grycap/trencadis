package trencadis.infrastructure.services.DICOMStorage.impl.wrapper.xmlOutputDownloadAllReportsByOntology;/*******************************************************************  *********** CLASE GENERADA AUTOM?TICAMENTE POR XMLWRAPPER **********  ********-----Germ?n Molt? Mart?nez (gmolto@dsic.upv.es) -----*******  ********************************************************************/import org.w3c.dom.*;/** * Contiene los m?todos que permiten obtener y cambiar la informaci?n de los * elementos <STRONG>DICOM_REPORTS </STRONG> del documento XML. */public class DICOM_REPORTS extends Wrapper {	/**	 * Crea un Wrapper que trabajar? a partir de un elemento DICOM_REPORTS	 * 	 * @param e	 *            El elemento sobre el cual trabaja el Wrapper	 */	public DICOM_REPORTS(Element e) {		super(e);	}	/**	 * Permite iterar por todos los elementos DICOM_SR	 * 	 * @return Un java.util.iterator para facilitar la iteraci?n <BR>	 *         Ejemplo de uso: <BR>	 *         Iterator it = getAll_DICOM_SR(); <BR>	 *         while (it.hasNext()){ <BR>	 *         <UL>	 *         DICOM_SR obj = (DICOM_SR) it.next(); <BR>	 *         }	 */	public java.util.Iterator getAll_DICOM_SR() {		java.util.Vector v = getChildsByTagName("DICOM_SR");		int length = v.size();		for (int i = 0; i < length; i++) {			v.setElementAt(new DICOM_SR((Element) v.elementAt(i)), i);		}		return v.iterator();	}	/**	 * A?ade un nuevo elemento DICOM_SR. El contenido del nuevo elemento es	 * vacio y deber? ser establecido mediante los m?todos del wrapper obtenido	 * 	 * @return Un wrapper al nuevo elemento introducido	 */	public DICOM_SR add_DICOM_SR() {		Element newDICOM_SR = doc.createElement("DICOM_SR");		elem.appendChild(newDICOM_SR);		return new DICOM_SR(newDICOM_SR);	}}