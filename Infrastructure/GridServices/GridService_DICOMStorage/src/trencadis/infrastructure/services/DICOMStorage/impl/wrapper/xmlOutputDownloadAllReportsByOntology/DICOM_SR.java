package trencadis.infrastructure.services.DICOMStorage.impl.wrapper.xmlOutputDownloadAllReportsByOntology;/*******************************************************************  *********** CLASE GENERADA AUTOM?TICAMENTE POR XMLWRAPPER **********  ********-----Germ?n Molt? Mart?nez (gmolto@dsic.upv.es) -----*******  ********************************************************************/import org.w3c.dom.*;/** * Contiene los m?todos que permiten obtener y cambiar la informaci?n de los * elementos <STRONG>DICOM_SR </STRONG> del documento XML. */public class DICOM_SR extends Wrapper {	/**	 * Crea un Wrapper que trabajar? a partir de un elemento DICOM_SR	 * 	 * @param e	 *            El elemento sobre el cual trabaja el Wrapper	 */	public DICOM_SR(Element e) {		super(e);	}	/**	 * Obtiene el valor del elemento	 * 	 * @return El valor del elemento	 */	public String getValue() {		try {			String xml = this.str_to_XML();			int ini = xml.indexOf("<DICOM_SR ");			int fin = xml.indexOf("</DICOM_SR>");			xml = xml.substring(ini, fin + 11);			return xml;		} catch (Exception e) {			e.printStackTrace();			return null;		}	}	/**	 * Establece el valor del elemento	 * 	 * @param El	 *            nuevo valor del elemento	 * @throws java.lang.IllegalArgumentException. Si	 *             el valor incumple alguna de las restricciones del Schema	 */	public void setValue(String value) {		String unparsedValue = value;		try {			setValueByTagName("DICOM_SR", unparsedValue);		} catch (Exception e) { // Si no existe el elemento lo creamos			Element el = doc.createElement("DICOM_SR");			el.appendChild(doc.createTextNode(unparsedValue));			elem.appendChild(el);		}	}}