package trencadis.infrastructure.services.StorageBroker.impl.wrapper.xmlInputUpdateResources;/*******************************************************************  *********** AUTOMATICALLY GENERATED CLASS BY XmlWrappers  **********  ********-----German Molto  (gmolto@dsic.upv.es) -----*******  ********************************************************************/ import org.w3c.dom.*;/** * Contains the methods that allow to obtain and change the information of * the elements <STRONG>DICOM_SR </STRONG> from the XML document. */public class DICOM_SR extends Wrapper{/** * Creates a Wrapper that works starting from the element DICOM_SR * @param e The elemenent the Wrapper works with*/public DICOM_SR(Element e){ super(e);}/** * Get the value of attribute reportType * @return The value of attribute reportType */public String getAttr_reportType(){try { String unparsedValue = elem.getAttribute("reportType"); String parsedValue = unparsedValue; return parsedValue;  }catch (Exception e) { e.printStackTrace(); return  null;}}/** * Set the value of attribute reportType * If the attribute does not exist, it is created * @param value The new value of the attribute */public void  setAttr_reportType( String value ){try{ String unparsedValue = value; elem.setAttribute("reportType", unparsedValue);}catch(Exception e) {e.printStackTrace();}}/** * Obtains the value of element xmlTemplate * @return The value of element xmlTemplate */public String get_xmlTemplate(){ try { String unparsedValue = getValueByTagName("xmlTemplate"); String parsedValue = unparsedValue; return parsedValue; }catch (Exception e) { e.printStackTrace(); return null;}}/** * Sets the value to element xmlTemplate * If the element does not exist it is automatically created * @param value The new value of element xmlTemplate * @throws IllegalArgumentException If the value violates *         any scheme restriction */public void set_xmlTemplate(String value){ String unparsedValue = value; try{ setValueByTagName("xmlTemplate", unparsedValue); } catch(Exception e) { //Si no existe el elemento lo creamos   Element el = doc.createElement("xmlTemplate");   el.appendChild(doc.createTextNode(unparsedValue));   elem.appendChild(el); }}}