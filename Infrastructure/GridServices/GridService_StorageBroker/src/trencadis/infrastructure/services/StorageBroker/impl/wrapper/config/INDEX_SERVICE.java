package trencadis.infrastructure.services.StorageBroker.impl.wrapper.config;/*******************************************************************  *********** AUTOMATICALLY GENERATED CLASS BY XmlWrappers  **********  ********-----German Molto  (gmolto@dsic.upv.es) -----*******  ********************************************************************/ import org.w3c.dom.*;/** * Contains the methods that allow to obtain and change the information of * the elements <STRONG>INDEX_SERVICE </STRONG> from the XML document. */public class INDEX_SERVICE extends Wrapper{/** * Creates a Wrapper that works starting from the element INDEX_SERVICE * @param e The elemenent the Wrapper works with*/public INDEX_SERVICE(Element e){ super(e);}/** * Obtains the value of element URL_IIS_CENTRAL * @return The value of element URL_IIS_CENTRAL */public String get_URL_IIS_CENTRAL(){ try { String unparsedValue = getValueByTagName("URL_IIS_CENTRAL"); String parsedValue = unparsedValue; return parsedValue; }catch (Exception e) { e.printStackTrace(); return null;}}/** * Sets the value to element URL_IIS_CENTRAL * If the element does not exist it is automatically created * @param value The new value of element URL_IIS_CENTRAL * @throws IllegalArgumentException If the value violates *         any scheme restriction */public void set_URL_IIS_CENTRAL(String value){ String unparsedValue = value; try{ setValueByTagName("URL_IIS_CENTRAL", unparsedValue); } catch(Exception e) { //Si no existe el elemento lo creamos   Element el = doc.createElement("URL_IIS_CENTRAL");   el.appendChild(doc.createTextNode(unparsedValue));   elem.appendChild(el); }}/** * Obtains the value of element REGISTRATION_PATH * @return The value of element REGISTRATION_PATH */public String get_REGISTRATION_PATH(){ try { String unparsedValue = getValueByTagName("REGISTRATION_PATH"); String parsedValue = unparsedValue; return parsedValue; }catch (Exception e) { e.printStackTrace(); return null;}}/** * Sets the value to element REGISTRATION_PATH * If the element does not exist it is automatically created * @param value The new value of element REGISTRATION_PATH * @throws IllegalArgumentException If the value violates *         any scheme restriction */public void set_REGISTRATION_PATH(String value){ String unparsedValue = value; try{ setValueByTagName("REGISTRATION_PATH", unparsedValue); } catch(Exception e) { //Si no existe el elemento lo creamos   Element el = doc.createElement("REGISTRATION_PATH");   el.appendChild(doc.createTextNode(unparsedValue));   elem.appendChild(el); }}}