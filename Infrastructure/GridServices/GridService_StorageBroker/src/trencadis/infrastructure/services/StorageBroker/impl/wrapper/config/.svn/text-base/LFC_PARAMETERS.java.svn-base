package trencadis.infrastructure.services.StorageBroker.impl.wrapper.config;/*******************************************************************  *********** AUTOMATICALLY GENERATED CLASS BY XmlWrappers  **********  ********-----German Molto  (gmolto@dsic.upv.es) -----*******  ********************************************************************/ import org.w3c.dom.*;/** * Contains the methods that allow to obtain and change the information of * the elements <STRONG>LFC_PARAMETERS </STRONG> from the XML document. */public class LFC_PARAMETERS extends Wrapper{/** * Creates a Wrapper that works starting from the element LFC_PARAMETERS * @param e The elemenent the Wrapper works with*/public LFC_PARAMETERS(Element e){ super(e);}/** * Obtains the value of element LCG_GFAL_INFOSYS * @return The value of element LCG_GFAL_INFOSYS */public String get_LCG_GFAL_INFOSYS(){ try { String unparsedValue = getValueByTagName("LCG_GFAL_INFOSYS"); String parsedValue = unparsedValue; return parsedValue; }catch (Exception e) { e.printStackTrace(); return null;}}/** * Sets the value to element LCG_GFAL_INFOSYS * If the element does not exist it is automatically created * @param value The new value of element LCG_GFAL_INFOSYS * @throws IllegalArgumentException If the value violates *         any scheme restriction */public void set_LCG_GFAL_INFOSYS(String value){ String unparsedValue = value; try{ setValueByTagName("LCG_GFAL_INFOSYS", unparsedValue); } catch(Exception e) { //Si no existe el elemento lo creamos   Element el = doc.createElement("LCG_GFAL_INFOSYS");   el.appendChild(doc.createTextNode(unparsedValue));   elem.appendChild(el); }}/** * Obtains the value of element LCG_GFAL_VO * @return The value of element LCG_GFAL_VO */public String get_LCG_GFAL_VO(){ try { String unparsedValue = getValueByTagName("LCG_GFAL_VO"); String parsedValue = unparsedValue; return parsedValue; }catch (Exception e) { e.printStackTrace(); return null;}}/** * Sets the value to element LCG_GFAL_VO * If the element does not exist it is automatically created * @param value The new value of element LCG_GFAL_VO * @throws IllegalArgumentException If the value violates *         any scheme restriction */public void set_LCG_GFAL_VO(String value){ String unparsedValue = value; try{ setValueByTagName("LCG_GFAL_VO", unparsedValue); } catch(Exception e) { //Si no existe el elemento lo creamos   Element el = doc.createElement("LCG_GFAL_VO");   el.appendChild(doc.createTextNode(unparsedValue));   elem.appendChild(el); }}/** * Obtains the value of element LFC_HOME * @return The value of element LFC_HOME */public String get_LFC_HOME(){ try { String unparsedValue = getValueByTagName("LFC_HOME"); String parsedValue = unparsedValue; return parsedValue; }catch (Exception e) { e.printStackTrace(); return null;}}/** * Sets the value to element LFC_HOME * If the element does not exist it is automatically created * @param value The new value of element LFC_HOME * @throws IllegalArgumentException If the value violates *         any scheme restriction */public void set_LFC_HOME(String value){ String unparsedValue = value; try{ setValueByTagName("LFC_HOME", unparsedValue); } catch(Exception e) { //Si no existe el elemento lo creamos   Element el = doc.createElement("LFC_HOME");   el.appendChild(doc.createTextNode(unparsedValue));   elem.appendChild(el); }}/** * Obtains the value of element LFC_HOST * @return The value of element LFC_HOST */public String get_LFC_HOST(){ try { String unparsedValue = getValueByTagName("LFC_HOST"); String parsedValue = unparsedValue; return parsedValue; }catch (Exception e) { e.printStackTrace(); return null;}}/** * Sets the value to element LFC_HOST * If the element does not exist it is automatically created * @param value The new value of element LFC_HOST * @throws IllegalArgumentException If the value violates *         any scheme restriction */public void set_LFC_HOST(String value){ String unparsedValue = value; try{ setValueByTagName("LFC_HOST", unparsedValue); } catch(Exception e) { //Si no existe el elemento lo creamos   Element el = doc.createElement("LFC_HOST");   el.appendChild(doc.createTextNode(unparsedValue));   elem.appendChild(el); }}/** * Obtains the value of element LCG_CATALOG_TYPE * @return The value of element LCG_CATALOG_TYPE */public String get_LCG_CATALOG_TYPE(){ try { String unparsedValue = getValueByTagName("LCG_CATALOG_TYPE"); String parsedValue = unparsedValue; return parsedValue; }catch (Exception e) { e.printStackTrace(); return null;}}/** * Sets the value to element LCG_CATALOG_TYPE * If the element does not exist it is automatically created * @param value The new value of element LCG_CATALOG_TYPE * @throws IllegalArgumentException If the value violates *         any scheme restriction */public void set_LCG_CATALOG_TYPE(String value){ String unparsedValue = value; try{ setValueByTagName("LCG_CATALOG_TYPE", unparsedValue); } catch(Exception e) { //Si no existe el elemento lo creamos   Element el = doc.createElement("LCG_CATALOG_TYPE");   el.appendChild(doc.createTextNode(unparsedValue));   elem.appendChild(el); }}/** * Obtains the value of element LCG_RFIO_TYPE * @return The value of element LCG_RFIO_TYPE */public String get_LCG_RFIO_TYPE(){ try { String unparsedValue = getValueByTagName("LCG_RFIO_TYPE"); String parsedValue = unparsedValue; return parsedValue; }catch (Exception e) { e.printStackTrace(); return null;}}/** * Sets the value to element LCG_RFIO_TYPE * If the element does not exist it is automatically created * @param value The new value of element LCG_RFIO_TYPE * @throws IllegalArgumentException If the value violates *         any scheme restriction */public void set_LCG_RFIO_TYPE(String value){ String unparsedValue = value; try{ setValueByTagName("LCG_RFIO_TYPE", unparsedValue); } catch(Exception e) { //Si no existe el elemento lo creamos   Element el = doc.createElement("LCG_RFIO_TYPE");   el.appendChild(doc.createTextNode(unparsedValue));   elem.appendChild(el); }}/** * Obtains the value of element VO * @return The value of element VO */public String get_VO(){ try { String unparsedValue = getValueByTagName("VO"); String parsedValue = unparsedValue; return parsedValue; }catch (Exception e) { e.printStackTrace(); return null;}}/** * Sets the value to element VO * If the element does not exist it is automatically created * @param value The new value of element VO * @throws IllegalArgumentException If the value violates *         any scheme restriction */public void set_VO(String value){ String unparsedValue = value; try{ setValueByTagName("VO", unparsedValue); } catch(Exception e) { //Si no existe el elemento lo creamos   Element el = doc.createElement("VO");   el.appendChild(doc.createTextNode(unparsedValue));   elem.appendChild(el); }}/** * Obtains the value of element VO_DEFAULT_SE * @return The value of element VO_DEFAULT_SE */public String get_VO_DEFAULT_SE(){ try { String unparsedValue = getValueByTagName("VO_DEFAULT_SE"); String parsedValue = unparsedValue; return parsedValue; }catch (Exception e) { e.printStackTrace(); return null;}}/** * Sets the value to element VO_DEFAULT_SE * If the element does not exist it is automatically created * @param value The new value of element VO_DEFAULT_SE * @throws IllegalArgumentException If the value violates *         any scheme restriction */public void set_VO_DEFAULT_SE(String value){ String unparsedValue = value; try{ setValueByTagName("VO_DEFAULT_SE", unparsedValue); } catch(Exception e) { //Si no existe el elemento lo creamos   Element el = doc.createElement("VO_DEFAULT_SE");   el.appendChild(doc.createTextNode(unparsedValue));   elem.appendChild(el); }}}