package trencadis.infrastructure.services.StorageBroker.impl.wrapper.xmlOutputGetAllOntologies_OntologiesServer;/*******************************************************************  *********** AUTOMATICALLY GENERATED CLASS BY XmlWrappers  **********  ********-----German Molto  (gmolto@dsic.upv.es) -----*******  ********************************************************************/ import org.w3c.dom.*;/** * Contains the methods that allow to obtain and change the information of * the elements <STRONG>OUTPUT </STRONG> from the XML document. */public class OUTPUT extends Wrapper{/** * Creates a Wrapper that works starting from the element OUTPUT * @param e The elemenent the Wrapper works with*/public OUTPUT(Element e){ super(e);}/** * Obtains the value of element STATUS * @return The value of element STATUS */public String get_STATUS(){ try { String unparsedValue = getValueByTagName("STATUS"); String parsedValue = unparsedValue; return parsedValue; }catch (Exception e) { e.printStackTrace(); return null;}}/** * Sets the value to element STATUS * If the element does not exist it is automatically created * @param value The new value of element STATUS * @throws IllegalArgumentException If the value violates *         any scheme restriction */public void set_STATUS(String value){ String unparsedValue = value; try{ setValueByTagName("STATUS", unparsedValue); } catch(Exception e) { //Si no existe el elemento lo creamos   Element el = doc.createElement("STATUS");   el.appendChild(doc.createTextNode(unparsedValue));   elem.appendChild(el); }}/** * Obtains the value of element DESCRIPTION * @return The value of element DESCRIPTION */public String get_DESCRIPTION(){ try { String unparsedValue = getValueByTagName("DESCRIPTION"); String parsedValue = unparsedValue; return parsedValue; }catch (Exception e) { e.printStackTrace(); return null;}}/** * Sets the value to element DESCRIPTION * If the element does not exist it is automatically created * @param value The new value of element DESCRIPTION * @throws IllegalArgumentException If the value violates *         any scheme restriction */public void set_DESCRIPTION(String value){ String unparsedValue = value; try{ setValueByTagName("DESCRIPTION", unparsedValue); } catch(Exception e) { //Si no existe el elemento lo creamos   Element el = doc.createElement("DESCRIPTION");   el.appendChild(doc.createTextNode(unparsedValue));   elem.appendChild(el); }}/** * Enables to iterate through all the elements FILTER * @return A java.util.iterator to ease the iteration <BR> * Usage example: <BR> *    Iterator it = getAll_FILTER(); <BR>  *    while (it.hasNext()){  <BR> *     <UL>  FILTER obj = (FILTER) it.next(); <BR>    *     } */public java.util.Iterator getAll_FILTER() { java.util.Vector v = getChildsByTagName("FILTER"); int length = v.size();  for (int i = 0 ; i < length ; i++ ){   v.setElementAt(new  FILTER((Element)v.elementAt(i)) , i); } return v.iterator();}/** * Adds a new element FILTER. The content of the new element is void * and must be stablished through the methods of the obtained wrapper * @return A wrapper to the newly created element */ public FILTER add_FILTER(){  Element newFILTER = doc.createElement("FILTER");  elem.appendChild(newFILTER);  return new FILTER(newFILTER); }}